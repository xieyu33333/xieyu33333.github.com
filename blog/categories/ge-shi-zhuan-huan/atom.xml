<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 格式转换 | 庇护祝福的分享]]></title>
  <link href="http://xieyu33333.github.com/blog/categories/ge-shi-zhuan-huan/atom.xml" rel="self"/>
  <link href="http://xieyu33333.github.com/"/>
  <updated>2014-03-16T21:29:43+08:00</updated>
  <id>http://xieyu33333.github.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    <email><![CDATA[xieyu33333@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Doc转换为pdf的解决方案]]></title>
    <link href="http://xieyu33333.github.com/blog/2013/12/30/doczhuan-huan-wei-pdfde-jie-jue-fang-an/"/>
    <updated>2013-12-30T10:16:00+08:00</updated>
    <id>http://xieyu33333.github.com/blog/2013/12/30/doczhuan-huan-wei-pdfde-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>单纯的将Doc转换为pdf很简单，使用office软件直接在图形界面下转换即可，但是如果涉及到批量转换，最好还是使用命令行工具。</p>

<h2>一、unoconv</h2>

<h4>简介</h4>

<p>unoconv 利用 LibreOffice/OpenOffice 的 UNO 接口实现了命令行文档格式转换功能，支持所有 LibreOffice/OpenOfficee 支持的文件格式。
因此不管机器上安装的是LibreOffice还是OpenOffice，都可以使用unoconv进行格式转换，不过需要注意的是一台机器不能同时安装LibreOffice和OpenOffice。</p>

<h4>使用</h4>

<p>基础转换命令：</p>

<pre><code>$ unoconv -f pdf xxx.doc 
</code></pre>

<p>批量转换：
可以默认采用2002端口开启监听器（或者通过-p/--port参数指定端口），例如：</p>

<pre><code>unoconv --listener &amp;
sleep 20
unoconv -f pdf *.odt
unoconv -f doc *.odt
unoconv -f html *.odt
kill -15 %-
</code></pre>

<p>指定转换页数，文件名等：</p>

<pre><code>-e, --export=name=value  set export filter options
 eg. -e PageRange=1-2
</code></pre>

<p>实例：</p>

<pre><code>$ unoconv -f pdf -e PageRange=1-2 test.docx
</code></pre>

<p>这样就实现了只转换前两页。</p>

<h4>转换效果</h4>

<p>我的机器安装的是LibreOffice，效果还不错，和LibreOffic中的显示基本保持一致。不过少数doc文档在LibreOffice中显示有问题，因此转换后也是有问题的。</p>

<h2>二、Abiword</h2>

<h4>简介：</h4>

<p>AbiWord是一个以GNU通用公共许可证授权的免费文字处理软件，名称"AbiWord"是派生自意谓开放的西班牙语单词"Abierto"；支持Linux、Mac OS X（PowerPC）、Microsoft Windows、ReactOS、BeOS与其他操作系统，但对每个操作系统的支持程度都有所不同。
用它编辑文件后保存为.abw后缀，打开后为xml格式的文档。</p>

<h4>使用</h4>

<p>基础转换命令：</p>

<pre><code>    $ abiword --to=pdf xxx.doc
</code></pre>

<h4>实际转换效果</h4>

<p>实际转换效果并不好，测试下格式解析不佳，和原文差距较大，局部出现布局错乱的现象。</p>

<h2>三、cups-pdf</h2>

<h4>简介</h4>

<p>cups-pdf是一个虚拟打印机，输出效果和打印预览一致。这种方案保真性应该是最高的，但是相对来说不是很灵活，只能转成pdf。</p>

<h4>使用</h4>

<p>安装：</p>

<pre><code>$ sudo apt-get install cups-pdf
</code></pre>

<p>转换命令：</p>

<pre><code>$ oowriter -pt pdf your_word_file.doc
$ libreoffice -pt pdf your_word_file.doc
</code></pre>

<p>转换后的文件默认会保存在～/PDF文件夹中,不过中文文件的命名会有问题，会被命名为三位数字。</p>

<pre><code>$ libreoffice --headless --print-to-file --printer-name pdf --outdir /home/xieyu xxx.doc
</code></pre>

<p>使用<code>--print-to-file</code>选项可以指定打印输出目录和打印机，不过这里输出的是ps后缀的文件，可以重命名成pdf.<br/>
我这里(3.5版本)测试<code>--print-to-file</code>命令偶尔会出现文字解析不出来的情况，和使用Libreoffice的<code>--convert-to</code>选项结果一样。而4.1版本没有这个问题。  <br/>
<strong>使用模拟打印的方式无法指定pdf文件的命名，灵活性不够好。</strong></p>

<h2>四 LibreOffice自带的转换命令</h2>

<pre><code>$ libreoffice --headless --convert-to pdf *.doc
$ soffice --headless --convert-to pdf *.doc
</code></pre>

<p>注意：在GUI下使用，如果已经开启了桌面环境的Libreoffice,命令行无法生效。
我这里(3.5版本)测试偶尔会出现文字解析不出来的情况，而4.1版本没有这个问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[markdown转换为pdf的解决方案]]></title>
    <link href="http://xieyu33333.github.com/blog/2013/12/30/markdownzhuan-huan-wei-pdffang-an/"/>
    <updated>2013-12-30T10:10:00+08:00</updated>
    <id>http://xieyu33333.github.com/blog/2013/12/30/markdownzhuan-huan-wei-pdffang-an</id>
    <content type="html"><![CDATA[<h2>解决方案一：Kitabu</h2>

<h3>简介</h3>

<p>Kitabu是使用ruby生成电子书的方案，它本身支持markdown转换为epub和html格式，不过通过调用其他指定的依赖
来转换为mobi、pdf、txt等其他格式。 <br/>
<strong>依赖prince进行html向pdf的转换。</strong>      <br/>
<strong>依赖html2text进行html向txt的转换。</strong> <br/>
<strong>依赖KindleGen进行epub向mobi的转换。</strong> <br/>
Kitabu支持代码高亮，默认使用codeRay，也可以安装 pygments.rb进行代替 。 <br/>
Github地址：<a href="https://github.com/fnando/kitabu">https://github.com/fnando/kitabu</a></p>

<h3>安装方法</h3>

<h4>第一步 安装 Kitabu</h4>

<pre><code>$ gem install kitabu            
</code></pre>

<p>安装完毕后就可以使用kitabu系列命令了。</p>

<h4>第二步 检查需要的依赖是否安装</h4>

<pre><code>$ kitabu check    
</code></pre>

<p>命令行中会给出哪些已经安装，哪些未安装。例如：</p>

<pre><code> Prince XML: Converts HTML files into PDF files.
 Installed.
 KindleGen: Converts ePub e-books into .mobi files.
 Installed.
 html2text: Converts HTML documents into plain text.
 Not installed.
 pygments.rb: A generic syntax highlight. If installed, replaces CodeRay.
 Not installed.
</code></pre>

<h4>第三步 生成电子书制作目录</h4>

<pre><code>$ kitabu new mybook          
</code></pre>

<p>在当前文件夹下生成一个名为mybook的文件夹，进入文件夹后可以看到如下文件结构：</p>

<pre><code>mybook
    ├── code
    ├── config
    │   ├── helper.rb
    │   └── kitabu.yml
    ├── images
    ├── output
    ├── templates
    │   ├── epub
    │   │   ├── cover.erb
    │   │   ├── cover.png
    │   │   ├── page.erb
    │   │   └── user.css
    │   └── html
    │       ├── layout.css
    │       ├── layout.erb
    │       ├── syntax.css
    │       └── user.css
    └── text
        └── 01_Welcome.md
</code></pre>

<h4>第四步 生成各种格式的电子书</h4>

<pre><code>$ kitabu export
</code></pre>

<p>生成的文件会放在output文件夹中。</p>

<h3>使用中遇到的问题</h3>

<h4>转换PDF时中文无法解析</h4>

<p>解决方法： <br/>
  1.需要在本地安装中文字体。  <br/>
  2.在模板中添加中文字体。</p>

<h4>PDF中的代码出现没有对齐的情况。</h4>

<pre><code>Prince XML: Converts HTML files into PDF files.
Installed.
KindleGen: Converts ePub e-books into .mobi files.
Installed.
html2text: Converts HTML documents into plain text.
Not installed.
pygments.rb: A generic syntax highlight. If installed, replaces CodeRay.
Not installed.
</code></pre>

<h2>目前最常用的解决方案：pandoc</h2>

<h3>pandoc简介</h3>

<p>如果你需要文件格式的转换，pandoc 可以成为你的瑞士军刀，它可以将下列格式： markdown, reStructuredText, textile, HTML
, DocBook, LaTeX, MediaWiki markup, OPML,  Haddock 转换为：</p>

<pre><code>     HTML formats: XHTML, HTML5, and HTML slide shows using Slidy, reveal.js, Slideous, S5, or DZSlides.         
     Word processor formats: Microsoft Word docx, OpenOffice/LibreOffice ODT, OpenDocument XML
     Ebooks: EPUB version 2 or 3, FictionBook2
     Documentation formats: DocBook, GNU TexInfo, Groff man pages, Haddock markup
     Outline formats: OPML
     TeX formats: LaTeX, ConTeXt, LaTeX Beamer slides
     PDF via LaTeX
     Lightweight markup formats: Markdown, reStructuredText, AsciiDoc, MediaWiki markup, Emacs Org-Mode, Textile
     Custom formats: custom writers can be written in lua.
</code></pre>

<p>pandoc支持多种格式的转换，可以直接用命令行由markdown转换为pdf。</p>

<pre><code>    $ pandoc demo.md -o demo.pdf
</code></pre>

<p>虽然这个命令表面上是直接转换，但实际还是通过先转换为LaTeX格式，再转为pdf的。  <br/>
这个命令对我们没有实际意义。因为无法加载样式，也无法解析中文。实用情况下还是
需要将文档转换为html或者LaTeX文件格式，通过html模板或者LaTeX的tex模板进行样式定制。</p>

<p><strong>LaTeX（Donald E. Knuth（高德纳）发明的）是一个科技出版界常用的格式。</strong></p>

<h3>pandoc安装</h3>

<h4>第一步，安装pandoc</h4>

<pre><code>    $ sudo apt-get install pandoc        
</code></pre>

<h4>第二步，安装texlive</h4>

<pre><code>    $ sudo apt-get install texlive-xetex texlive-latex-recommended texlive-latex-extra      
</code></pre>

<p>TexLive是LaTeX的工具集，由于转换pdf必须先转换成LaTeX。</p>

<h4>第三步，安装中文字体</h4>

<pre><code>    $ sudo apt-get install ttf-arphic-gbsn00lp ttf-arphic-ukai ttf-wqy-microhei ttf-wqy-zenhei        
</code></pre>

<p>本机必须安装有中文字体，否则无法正确的转换中文。</p>

<h4>第四步，安装<a href="http://fletcherpenney.net/multimarkdown/install/#linux">multimarkdown</a></h4>

<pre><code>    git clone git://github.com/fletcher/peg-multimarkdown.git
</code></pre>

<p>下载后是一个文件夹，cd进去后执行make命令即可。<br/>
用于将多个md文件一起进行转化为一个pdf文件。</p>

<h3>怎么使用？</h3>

<h4>示例</h4>

<p><a href="http://johnmacfarlane.net/pandoc/demos.html">官方网站</a></p>

<pre><code>    pandoc -N --template=mytemplate.tex --variable version=1.9 SLIDES.md --latex-engine=xelatex --toc -o example14.pdf
</code></pre>

<p>示例页里还有很多别的例子，其中将markdown文件转换成网页的sldes非常吸引人</p>

<pre><code>    pandoc -s –mathml -i -t dzslides SLIDES -o example14a.html
    pandoc -s –webtex -i -t slidy SLIDES -o example14b.html
    pandoc -s –webtex -t -t s5 SLIDES -o example14c.html
</code></pre>
]]></content>
  </entry>
  
</feed>
